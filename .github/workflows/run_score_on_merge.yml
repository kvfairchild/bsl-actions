name: Score plugins on merge

on:
  push:
    branches:
      - main

jobs:
  checkchanges:
    name: Get plugins to score
    runs-on: ubuntu-latest
    outputs:
      output: ${{ steps.scriptout.outputs.plugins_to_run }}
    steps:
      - name: Check out repository code
        uses: actions/checkout@v2

      - name: Get changed files
        uses: dorny/paths-filter@v2.11.1
        id: filter
        with:
          list-files: shell
          filters: |
            changed:
              - '**'

      - name: Save changed files to env var
        run: echo "CHANGED_FILES=${{ steps.filter.outputs.changed_files }}" >> $GITHUB_ENV
      
      - name: Parse changed files with python script
        id: scriptout
        run: |
          echo "plugins_to_run=$(python .github/workflows/parse_changed_files.py create_plugins_dict ${{ env.CHANGED_FILES }})" >> $GITHUB_OUTPUT
  
  posttojenkins:
    name: POST job request to Jenkins
    runs-on: ubuntu-latest
    needs: checkchanges
    env:
      PLUGINS: ${{ needs.checkchanges.outputs.output }}
      JENKINS_URL: "braintree.mit.edu:8080"
      USER: "kvg0"
      JENKINS_TOKEN: ${{ secrets.JENKINS_TOKEN }}
      JOB_PATH: "dev_run_benchmarks"
    steps:
      - name: Set env variables from checkchanges output
        run: |
            echo "RUN_SCORE=$(jq -r ".run_score" <<< "$PLUGINS")" >> $GITHUB_ENV
            echo "MODELS_AND_BENCHMARKS=$(jq -r ".models_and_benchmarks" <<< "$PLUGINS")" >> $GITHUB_ENV
      - name: Set job params from env variables
        run: |
          echo "JOB_PARAMS=${{ env.MODELS_AND_BENCHMARKS }}" >> $GITHUB_ENV
      - name: build urls
        if: env.RUN_SCORE == 'true'
        run: |
          echo "CRUMB_URL=$JENKINS_URL/crumbIssuer/api/json --user $USER:${{ secrets.JENKINS_TOKEN }}" >> $GITHUB_ENV
          echo "URL=$JENKINS_URL/job/$JOB_PATH/buildWithParameters?$JOB_PARAMS&token=$JENKINS_TOKEN" >> $GITHUB_ENV
      - name: POST job
        if: env.RUN_SCORE == 'true'
        run: curl -X POST -u ${{ env.USER }}:${{ secrets.JENKINS_TOKEN }} ${{ env.URL }}
  